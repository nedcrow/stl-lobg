팀이름 장르 컨셉
팀명 : Team_Spine 팀_허리 팀_스파인 Team Disk Men T_DM
특징 : 3명이다, 척추가있다.
장르 : MOBG Multiplayer Online Battle Ground
게임명 : LOBG 롭지(리그 오브 배틀 그라운드)
컨셉 PPT 열람주소: https://docs.google.com/presentation/d/1lyxrwJ_0fM_prBs7PTk1ZKQpTMQlG0qDf4TJtDL_Q5c/edit?usp=sharing

fps 수업때 확장 -> 기능 추가
시스템 컨텐츠

오버워치 하이퍼 스킬
베그 정통 무기의 종류 스나이퍼 수류탄
차량 갈아타기

빠르게 다양하게

fps슈팅 AI웨이브 보스 AI

1번 플레이어			<- AI ->			2번 플레이어
1번 플레이어 1번AI						2번 플레이어 2번AI
상점, 인벤토리, AI, 채팅

플레이어 총을 쏜다
AI 총을 쏜다
레벨 시스템

총알의 시각화

AI 시스템 : 양쪽으로 간다.
보스가 부하를 보내는 결정 기준 : 일정 시간마다 일정 부하를 보낸다.
부하가 죽었을 때 보스한테 신호를 보냄
1번이 더 많다 1번으로 더 보내고 -> 부하죽으면 해택




정리
1팀 2팀으로 나눠서 상대방 AI보스를 먼저 쓰러트리는 슈팅게임(발전가능성있음)

1번 기본 레벨 구성 : Title -> Lobby -> Battle -> Lobby
2번 UI : Title UI, Lobby UI, Battle UI -> (상점UI, 플레이어 UI, AI UI, 아이템 UI, 게임결과 UI)
3번 우선적으로 만들어야 할것 : 레벨, 전체적인 프로세스, AI, 총알, 플레이어, UI, 
4번 기본 완성 후 기능 추가 할 것 : 플레이어의 레벨, 적 처치시 점수, 무기 종류, 인벤토리, 탈것

1. 플레이어 기본 무기를 가지고 스폰
2. 그냥 스폰, 옆에 둔다. 무기 교체
플레이어 공격이라는 신호를 가지고 있는 무기 Take Damage
무기 안에 Attack() Apply Damage 




************************************************************************************************

기본
Title 레벨 - 게임 Framwork, ui(로그인) - 조혁
로비 - Framework, ui(채팅), (캐릭터유무 : 일단 있는걸로) - 황하림
배틀 - Framework, ui(전투), 플레이어, 캐릭터 - 오정원

배틀+ - 애님인스턴스, 무기(+데미지 시스템 포함), 총알(이미시브-빛나게. 스타워즈 스타일), 맵

기간 : 최소 다음주 월요일



우선적으로 추가
AI(미니언, 보스) - 목표 : 적 AI보스으로 이동, 발견 시 전투

추가 가능성 : 도전과제
VR.
메시 : 애셋 추가
상점.
무기 : 원거리, 근거리, 로켓, 수류탄 등.
스킬. 마법.
아이템 : 맵에서 획등 가능한 아이템. 회복 아이템 등.
UI : 스코어 표시. 인벤토리, 미니맵, 적 체력바.
심리스 로딩 : 트렌지션맵.
레벨. 경험치. 돈.
차량. 시작시 비행기에서 낙하.


당장 필요한 애셋
서드퍼슨 템플릿
? 퍼스트퍼슨 템플릿
애니메이션 스타터팩

애셋은 필요할 때 필요한 만큼만 넣는다.
텍스처가 포함된 메시의 추가는 신중히 한다.


******************
0923
조혁-
오정원-
황하림-

*********************
0924

*********************
조혁-
0923
0924

오정원-
황하림-



작업 방식

공통 부모 상속은 자제
가급적 public:
이름 규칙 자유
주석 잘써주기 (이건 뭐다 하는 기능설명)
변수, 함수 분류해주기
RPC 함수 작명 : Server_ Client_ NetMulicast_
서버에서 보내면 Server_함수이름
클라이언트에서 보내면 Client_함수이름
깃허브에 올리기 전에 폴더 리디렉터 고치기 반드시 할 것.

작업 전에 Pull, 작업 후 Pull먼저 한 후 커밋하고 Push하자
작업 후 Pull 받았는데 오류가 났을 시
자기 파일은 오류부분 백업 후 오류 해결 후 추가하기

서로 작업하는 내용을 알고 있어야 한다.
다른 사람이 정한 건 가급적 건들지 않는다. 변수 함수 이름 등.
새로운 기능은 검증 후 추가. 빈 프로젝트나 복제 프로젝트 폴더에서 테스트 후 이주나 원래 프로젝트에서 재작성.




